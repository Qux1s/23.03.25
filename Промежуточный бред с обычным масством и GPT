#include <iostream>
#include <limits>

void calculator();
double userPrintNumber();
char userPrintOperation();
void printResult(double, double, char);
bool isContinue();
void ignoreLine();
char getValidOperator(char);

int main()
{
    calculator();
    return 0;
}

void calculator()
{
    do
    {
        std::cout << "Enter a first value: ";
        double userNumberOne{ userPrintNumber() };

        std::cout << "Enter a second value: ";
        double userNumberTwo{ userPrintNumber() };

        char userOperation{ userPrintOperation() };
        char validOperation = getValidOperator(userOperation);

        printResult(userNumberOne, userNumberTwo, validOperation);

    } while (isContinue());
}

double userPrintNumber()
{
    while (true)
    {
        double userFirst{};
        std::cin >> userFirst;

        if (!std::cin.fail())
        {
            ignoreLine();
            return userFirst;
        }
        else
        {
            std::cin.clear();
            ignoreLine();
            std::cout << "Oops, that input is invalid. Please try again.\n";
        }
    }
}

char userPrintOperation()
{
    while (true)
    {
        std::cout << "Enter one of the following: +, -, *, or /: ";
        char operation{};
        std::cin >> operation;
        ignoreLine();

        switch (operation)
        {
        case '+':
        case '-':
        case '*':
        case '/':
            return operation;
        default:
            std::cout << "Oops, that input is invalid. Please try again.\n";
        }
    }
}

char getValidOperator(char userOperation)
{
    char validOperators[] = {'+', '-', '*', '/'};
    for (char op : validOperators)
    {
        if (userOperation == op)
        {
            return op;
        }
    }
    return userOperation;
}

void printResult(double userFirst, double userSecond, char userOperation)
{
    switch (userOperation)
    {
    case '+':
        std::cout << userFirst << " + " << userSecond << " = " << userFirst + userSecond << '\n';
        break;
    case '-':
        std::cout << userFirst << " - " << userSecond << " = " << userFirst - userSecond << '\n';
        break;
    case '*':
        std::cout << userFirst << " * " << userSecond << " = " << userFirst * userSecond << '\n';
        break;
    case '/':
        if (userSecond == 0)
        {
            std::cout << "Error: Division by zero is not allowed.\n";
        }
        else
        {
            std::cout << userFirst << " / " << userSecond << " = " << userFirst / userSecond << '\n';
        }
        break;
    }
}

bool isContinue()
{
    while (true)
    {
        std::cout << "Enter 'y' to continue or 'n' to stop: ";
        char userResult{};
        std::cin >> userResult;
        ignoreLine();

        if (userResult == 'y' || userResult == 'Y')
            return true;
        else if (userResult == 'n' || userResult == 'N')
            return false;
        else
            std::cout << "Invalid input! Please enter 'y' or 'n'.\n";
    }
}

void ignoreLine()
{
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
}
