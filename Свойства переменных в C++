1. Область видимости (Scope)
Область видимости определяет, где можно использовать переменную.

Локальные переменные – объявлены внутри функции/блока {} и доступны только там.

Глобальные переменные – объявлены вне всех функций и доступны во всей программе.

Статические переменные (static) – сохраняют свое значение между вызовами функции.

Переменные в анонимных пространствах имен – доступны только внутри файла.

Переменные в классе (члены класса) – могут быть private, protected, public и относиться к объекту или всему классу (статические).

2. Время жизни (Storage Duration)
Определяет, как долго переменная существует в памяти:

Автоматическое (automatic) – переменная создается при входе в блок {} и уничтожается при выходе (обычные локальные переменные).

Статическое (static) – переменная создается при запуске программы и существует до ее завершения.

Динамическое (dynamic) – выделяется вручную с помощью new и освобождается delete.

Временное (temporary) – создается на лету (например, временные объекты в выражениях) и уничтожается сразу после использования.

3. Спецификаторы хранения
Определяют способ хранения и область видимости переменной:

auto – автоматическое определение типа (начиная с C++11).

static – сохраняет значение переменной между вызовами функции.

extern – объявляет переменную, определенную в другом файле.

register (устарело) – предлагало хранение в регистрах процессора (современные компиляторы игнорируют).

mutable – позволяет изменять переменную, даже если она находится в const-объекте.

4. Квалификаторы (Ограничители доступа и изменяемости)
const – запрещает изменение переменной.

volatile – указывает, что переменная может изменяться вне программы (например, через аппаратное устройство).

restrict (C, но поддерживается в некоторых компиляторах C++) – оптимизация для указателей, утверждающая, что на объект указывает только один указатель.

constexpr (C++11+) – вычисляется во время компиляции.

5. Связь (Linkage) переменных
Определяет, доступна ли переменная из других файлов:

Внутреннее связывание (internal linkage) – доступна только в своем файле (static).

Внешнее связывание (external linkage) – доступна в других файлах (extern).

Без связывания – локальные переменные, доступные только в своей области видимости.
